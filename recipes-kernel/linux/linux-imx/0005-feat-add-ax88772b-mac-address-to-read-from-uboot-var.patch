From 5c1e41c06a2cab133a152e4e368ecb940f929f98 Mon Sep 17 00:00:00 2001
From: "ktim.chen" <ktim.chen@axiomtek.com.tw>
Date: Wed, 17 Aug 2022 16:05:36 +0800
Subject: [PATCH 5/8] feat: add ax88772b mac address to read from uboot
 variable

---
 drivers/net/usb/asix_devices.c | 24 +++++++++++++++++++++++-
 1 file changed, 23 insertions(+), 1 deletion(-)
 mode change 100644 => 100755 drivers/net/usb/asix_devices.c

diff --git a/drivers/net/usb/asix_devices.c b/drivers/net/usb/asix_devices.c
old mode 100644
new mode 100755
index ef548beba684..422c02d8c475
--- a/drivers/net/usb/asix_devices.c
+++ b/drivers/net/usb/asix_devices.c
@@ -32,6 +32,8 @@
 #define AX88772A_PHY16H		0x16
 #define AX88772A_PHY16H_DEFAULT 0x4044
 
+static char asix_mac_addr[ETH_ALEN] = {0};
+
 struct ax88172_int_data {
 	__le16 res1;
 	u8 link;
@@ -674,6 +676,22 @@ static int asix_resume(struct usb_interface *intf)
 	return usbnet_resume(intf);
 }
 
+static int __init asix_get_mac_address(char *str)
+{
+	int i;
+	char *end;
+
+	for (i = 0; i < 6; i++) {
+		asix_mac_addr[i] = str ? simple_strtoul(str, &end, 16) : 0;
+		if (str)
+			str = (*end) ? end + 1 : end;
+	}
+
+	return 1;
+}
+
+__setup("asix_ethaddr=", asix_get_mac_address);
+
 static int ax88772_bind(struct usbnet *dev, struct usb_interface *intf)
 {
 	int ret, i;
@@ -687,7 +705,11 @@ static int ax88772_bind(struct usbnet *dev, struct usb_interface *intf)
 	if (!eth_platform_get_mac_address(&dev->udev->dev, buf)) {
 		netif_dbg(dev, ifup, dev->net,
 			  "MAC address read from device tree");
-	} else {
+	} 
+	else if (is_valid_ether_addr(asix_mac_addr)) {
+		memcpy(buf, asix_mac_addr, ETH_ALEN);
+	}
+	else {
 		/* Try getting the MAC address from EEPROM */
 		if (dev->driver_info->data & FLAG_EEPROM_MAC) {
 			for (i = 0; i < (ETH_ALEN >> 1); i++) {
-- 
2.17.1

